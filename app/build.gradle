plugins {
    id 'kotlin-android'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint' version '11.0.0'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.firebase.appdistribution'
}

apply {
    from '../buildscripts/detekt.gradle'
    from '../buildscripts/git-hooks.gradle'
    from '../buildscripts/jacoco.gradle'
    from '../buildscripts/kover.gradle'
    from '../buildscripts/coveralls.gradle'
}


android {
    compileSdk 33
    defaultConfig {
        applicationId "com.andreolas.movierama"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 5
        versionName "2.2.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    signingConfigs {
        release {
            def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"
            def allFilesFromDir = new File(tmpFilePath).listFiles()
            if (allFilesFromDir != null) {
                def keystoreFile = allFilesFromDir.first()
                keystoreFile.renameTo("/keystore/keystore.jks")
                storeFile = keystoreFile
            }
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseAppDistribution {
                artifactType="APK"
                artifactPath="app/build/outputs/apk/release/app-release.apk"
            }
        }
        debug {
            testCoverageEnabled true
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    android {
        compileOptions {
            coreLibraryDesugaringEnabled true

            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    testOptions {
        unitTests.all {
            kover {
                enabled = true
                excludes = [
                        "dagger.hilt.internal.aggregatedroot.codegen.*",
                        "hilt_aggregated_deps.*",
                        ".*ComposableSingletons.*",
                        ".*Hilt.*",
                        ".*BuildConfig.*",
                        ".*_Factory.*",
                ]
            }
        }
    }

    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            named(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
        variant.buildConfigField "String", "TMDB_BASE_URL", '"https://api.themoviedb.org/3"'
        variant.buildConfigField "String", "TMDB_IMAGE_URL", '"https://image.tmdb.org/t/p/original"'
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    def appcompat_version = "1.5.1"
    def room_version = "2.5.0"
    def hilt_version = "2.43.2"
    def ktor_version = "2.2.2"


    implementation project(':core-util')

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.4.0")
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.4'
    implementation 'androidx.startup:startup-runtime:1.1.1'

    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Compose
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material:1.3.1'
    implementation 'androidx.compose.ui:ui-util:1.3.3'
    // Material Dialog for Compose
    implementation "io.github.vanpra.compose-material-dialogs:datetime:0.8.1-rc"
    // AsyncImage for Compose
    implementation "io.coil-kt:coil-compose:2.2.2"

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'

    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

    // Required -- JUnit 4 framework
    testImplementation "junit:junit:4.13.2"
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core-ktx:1.4.0"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:4.6.1"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    // Optional -- Mockk framework
    testImplementation "io.mockk:mockk:1.12.4"

    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    implementation "androidx.appcompat:appcompat:$appcompat_version"


    // Room DB
    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Ktor
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"

    implementation 'com.airbnb.android:lottie:5.2.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation("org.greenrobot:eventbus:3.3.1")

    // DataStore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation 'androidx.datastore:datastore-preferences-core:1.0.0'
    // KeyStore - Encrypted Preferences
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha04'


    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "com.google.truth:truth:1.1.3"

    // Compose Navigation
    implementation 'io.github.raamcosta.compose-destinations:core:1.7.27-beta'
    implementation "io.github.raamcosta.compose-destinations:animations-core:1.7.27-beta"
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.27-beta'
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}
