/**
 * Having a version catalog for dependencies helps ensure that the project is well-maintained,
 * up-to-date, reproducible, and suitable for collaboration.
 */
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            version('kotlin', '1.7.20')
            version('kotlinx-datetime', '0.4.0')

            version('androidx-fragment', '1.5.4')
            version('androidx-lifecycle', '2.5.1')

            // Network & Serialization
            version('kotlinx-serialization', '1.4.1')
            version('ktor', '2.2.2')

            // DI
            version('hilt', '2.43.2')

            // Compose
            version('compose', '1.3.3')
            version('compose-destinations', '1.7.27-beta')
            version('compose-bom', '2022.10.00')

            // Internal Database
            version('room', '2.5.0')
            version('datastore', '1.0.0')
            version('encrypted-prefs', '1.1.0-alpha04')

            // Multithreading
            version('kotlinx-coroutines', '1.6.4')

            // Desugaring
            alias('android-tools-desugar').to('com.android.tools:desugar_jdk_libs:1.1.5')

            // Kotlin
            alias('kotlin-stdlib-jdk7').to('org.jetbrains.kotlin', 'kotlin-stdlib-jdk7').versionRef('kotlin')
            alias('kotlin-stdlib-jdk8').to('org.jetbrains.kotlin', 'kotlin-stdlib-jdk8').versionRef('kotlin')
            alias('kotlin-reflect').to('org.jetbrains.kotlin', 'kotlin-reflect').versionRef('kotlin')
            alias('kotlin-test-junit').to('org.jetbrains.kotlin', 'kotlin-test-junit').versionRef('kotlin')
            alias('kotlinx-datetime').to('org.jetbrains.kotlinx', 'kotlinx-datetime').versionRef('kotlinx-datetime')
            alias('kotlinx-coroutines-core').to('org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('kotlinx-coroutines')

            // Android X
            alias('androidx-activity-ktx').to('androidx.activity:activity-ktx:1.5.1')
            alias('androidx-core-ktx').to('androidx.core:core-ktx:1.9.0')
            alias('androidx-fragment-ktx').to('androidx.fragment', 'fragment-ktx').versionRef('androidx-fragment')
            alias('androidx-fragment-testing').to('androidx.fragment', 'fragment-testing').versionRef('androidx-fragment')
            alias('androidx-annotation').to('androidx.annotation:annotation:1.4.0')
            alias('androidx-appcompat').to('androidx.appcompat:appcompat:1.5.1')
            alias('androidx-constraintlayout').to('androidx.constraintlayout:constraintlayout:2.1.4')
            alias('androidx-recyclerview').to('androidx.recyclerview:recyclerview:1.2.1')
            alias('androidx-legacy-support').to('androidx.legacy:legacy-support-v13:1.0.0')
            alias('androidx-startup').to('androidx.startup:startup-runtime:1.1.1')

            // Firebase
            alias('firebase-bom').to('com.google.firebase:firebase-bom:31.2.0')
            alias('firebase-crashlytics').to('com.google.firebase:firebase-crashlytics-ktx:18.3.3')
            alias('firebase-analytics').to('com.google.firebase:firebase-analytics-ktx:21.2.0')
            alias('firebase-config').to('com.google.firebase:firebase-config-ktx:21.2.1')

            // Compose
            alias('compose-bom').to('androidx.compose', 'compose-bom').versionRef('compose-bom')
            alias('compose-material3').to('androidx.compose.material3:material3:1.0.1')
            alias('compose-material').to('androidx.compose.material:material:1.3.1')
            alias('compose-ui-util').to('androidx.compose.ui:ui-util:1.3.3')
            alias('compose-ui-preview').to('androidx.compose.ui:ui-tooling-preview:1.3.2')
            alias('compose-ui-test-manifest').to('androidx.compose.ui', 'ui-test-manifest').versionRef('compose')
            alias('compose-hilt-navigation').to('androidx.hilt:hilt-navigation-compose:1.0.0')
            // Compose Destinations
            alias('compose-destinations-core').to('io.github.raamcosta.compose-destinations', 'core').versionRef('compose-destinations')
            alias('compose-destinations-animations').to('io.github.raamcosta.compose-destinations', 'animations-core').versionRef('compose-destinations')
            alias('compose-destinations-ksp').to('io.github.raamcosta.compose-destinations', 'ksp').versionRef('compose-destinations')

            // Third Party
            alias('greenrobot-eventbus').to('org.greenrobot:eventbus:3.3.1')
            alias('lottie').to('com.airbnb.android:lottie:5.2.0')
            alias('timber').to('com.jakewharton.timber:timber:5.0.1')

            // UI Tools
            alias('material-material').to('com.google.android.material:material:1.7.0')
            alias('coil-compose').to('io.coil-kt:coil-compose:2.2.2')
            alias('vanpra-compose-dialogs').to('io.github.vanpra.compose-material-dialogs:datetime:0.8.1-rc')

            // Network & Serialization
            alias('ktor-client-core').to('io.ktor', 'ktor-client-core').versionRef('ktor')
            alias('ktor-client-android').to('io.ktor', 'ktor-client-android').versionRef('ktor')
            alias('ktor-client-logging').to('io.ktor', 'ktor-client-logging').versionRef('ktor')
            alias('ktor-client-content-negotiation').to('io.ktor', 'ktor-client-content-negotiation').versionRef('ktor')
            alias('ktor-serialization-kotlinx-json').to('io.ktor', 'ktor-serialization-kotlinx-json').versionRef('ktor')
            alias('kotlinx-serialization-json').to('org.jetbrains.kotlinx', 'kotlinx-serialization-json').versionRef('kotlinx-serialization')

            // DI
            alias('dagger-hilt-compiler').to('com.google.dagger', 'hilt-compiler').versionRef('hilt')
            alias('dagger-hilt-android').to('com.google.dagger', 'hilt-android').versionRef('hilt')
            alias('dagger-hilt-android-testing').to('com.google.dagger', 'hilt-android-testing').versionRef('hilt')
            alias('dagger-hilt-android-compiler').to('com.google.dagger', 'hilt-android-compiler').versionRef('hilt')

            // Database
            alias('datastore').to('androidx.datastore', 'datastore').versionRef('datastore')
            alias('datastore-core').to('androidx.datastore', 'datastore-core').versionRef('datastore')
            alias('datastore-preferences').to('androidx.datastore', 'datastore-preferences').versionRef('datastore')
            alias('datastore-preferences-core').to('androidx.datastore', 'datastore-preferences-core').versionRef('datastore')
            alias('encrypted-preferences').to('androidx.security', 'security-crypto-ktx').versionRef('encrypted-prefs')
            alias('room-ktx').to('androidx.room', 'room-ktx').versionRef('room')
            alias('room-runtime').to('androidx.room', 'room-runtime').versionRef('room')
            alias('room-compiler').to('androidx.room', 'room-compiler').versionRef('room')

        }

        testLibs {
            version('androidx-test', '1.5.0') // upgrade to 1.5.0
            version('androidx-test-ext-junit', '1.1.3')
            version('junit', '4.13.2')
            version('kotlinx-coroutines', '1.6.4')
            version('truth', '1.1.3')
            version('turbine', '0.12.1')

            // UI
            version('espresso', '3.5.1')
            version('robolectric', '4.8.1')
            version('androidx-compose-ui-test', '1.3.3')

            // Mockers
            version('mockito', '5.1.1')
            version('mockito-kotlin', '4.1.0')
            version('mockk', '1.12.4')

            alias('junit-junit').to('junit', 'junit').versionRef('junit')
            alias('androidx-test-core').to('androidx.test', 'core').versionRef('androidx-test')
            alias('androidx-test-core-ktx').to('androidx.test', 'core-ktx').versionRef('androidx-test')
            alias('androidx-test-ext-junit').to('androidx.test.ext', 'junit').versionRef('androidx-test-ext-junit')
            alias('androidx-test-ext-junit-ktx').to('androidx.test.ext', 'junit-ktx').versionRef('androidx-test-ext-junit')
            alias('androidx-test-orchestrator').to('androidx.test:orchestrator:1.4.1')
            alias('kotlix-coroutines-test').to('org.jetbrains.kotlinx', 'kotlinx-coroutines-test').versionRef('kotlinx-coroutines')
            alias('truth').to('com.google.truth', 'truth').versionRef('truth')
            alias('turbine').to('app.cash.turbine','turbine').versionRef('turbine')

            // UI
            alias('robolectric-robolectric').to('org.robolectric', 'robolectric').versionRef('robolectric')
            alias('espresso-core').to('androidx.test.espresso', 'espresso-core').versionRef('espresso')
            alias('androidx-compose-ui').to('androidx.compose.ui', 'ui-test-junit4').versionRef("androidx-compose-ui-test")


            // Mockers
            alias('mockito-core').to('org.mockito', 'mockito-core').versionRef("mockito")
            alias('mockito-kotlin').to('org.mockito.kotlin', 'mockito-kotlin').versionRef('mockito-kotlin')
            alias('mockk').to('io.mockk', 'mockk').versionRef('mockk')
        }

/*        lintLibs {
            version('lint', '30.2.2')

            alias('lint-api').to('com.android.tools.lint', 'lint-api').versionRef('lint')
            alias('lint-checks').to('com.android.tools.lint', 'lint-checks').versionRef('lint')
            alias('lint-tests').to('com.android.tools.lint', 'lint-tests').versionRef('lint')
        }
        */
    }
}
