[versions]
version-name = "0.4.0"
version-code = "8"

firebase-appdistribution-gradle = "4.2.0"
firebase-crashlytics-gradle = "2.9.9"
google-services = "4.4.1"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.21"
android-tools = "31.4.0"
# android-tools and agp should be updated together
agp = "8.4.0"
core-ktx = "1.13.1"
junit = "4.13.2"
androidx-test-ext-junit = "1.2.1"
lifecycle-runtime-ktx = "2.7.0"
activity-compose = "1.9.0"
start-up = "1.1.1"
kotlinx-datetime = "0.6.0"
ktlint = "12.1.1"
secrets = "2.0.1"
desugar = "2.0.4"

detekt = "1.23.6"

# Android
#androidx-fragment = "1.7.0"

# Internal Database
room = "2.6.1"
datastore = '1.1.1'
encrypted-prefs = '1.1.0-alpha04'

# Multithreading
kotlinx-coroutines = '1.8.1'

# Network & Serialization
ktor = "2.3.8"
kotlinx-serialization = "1.5.1"

# Depedency Injection
hilt = "2.51.1"

# Compose
compose-bom = "2024.06.00"
compose-destinations = "2.1.0-beta09"
compose-hilt-navigation = "1.2.0"
material3 = "1.2.1"

# Timber
timber = "5.0.1"

# Testing
kover = "0.8.1"

androidx-test = "1.6.1"
truth = "1.4.2"
turbine = "1.1.0"

# UI
robolectric = "4.12.2"
androidx-compose-ui-test = "1.6.8"
ui-automator = "2.3.0"

# Mockers
mockito = "5.11.0"
mockito-kotlin = "5.3.1"
mockk = "1.13.2"

[libraries]

android-tools-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }

# Android X
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
androidx-startup = { group = "androidx.startup", name = "startup-runtime", version.ref = "start-up" }

kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

junit = { group = "junit", name = "junit", version.ref = "junit" }

# Jetpack Compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
compose-material-icons = { group = "androidx.compose.material", name = "material-icons-extended" }
compose-hilt-navigation = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "compose-hilt-navigation" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-foundation = { group = "androidx.compose.foundation", name = "foundation" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

compose-coil = "io.coil-kt:coil-compose:2.6.0"

# Compose Navigation
compose-destinations-core = { module = "io.github.raamcosta.compose-destinations:core", version.ref = "compose-destinations" }
compose-destinations-bottom-sheet = { module = "io.github.raamcosta.compose-destinations:bottom-sheet", version.ref = "compose-destinations" }
compose-destinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "compose-destinations" }

# Network & Serialization
ktor-client-core = { group = 'io.ktor', name = 'ktor-client-core', version.ref = 'ktor' }
ktor-client-android = { group = 'io.ktor', name = 'ktor-client-android', version.ref = 'ktor' }
ktor-client-logging = { group = 'io.ktor', name = 'ktor-client-logging', version.ref = 'ktor' }
ktor-client-content-negotiation = { group = 'io.ktor', name = 'ktor-client-content-negotiation', version.ref = 'ktor' }
ktor-serialization-kotlinx-json = { group = 'io.ktor', name = 'ktor-serialization-kotlinx-json', version.ref = 'ktor' }
kotlinx-serialization-json = { group = 'org.jetbrains.kotlinx', name = 'kotlinx-serialization-json', version.ref = 'kotlinx-serialization' }

# Depedency Injection
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
dagger-hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
dagger-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

# Misc
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

youtube-player = 'com.pierfrancescosoffritti.androidyoutubeplayer:core:11.1.0'

# Detekt
detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# Firebase
firebase-bom = 'com.google.firebase:firebase-bom:33.1.0'
firebase-crashlytics = 'com.google.firebase:firebase-crashlytics-ktx:19.0.1'
firebase-analytics = 'com.google.firebase:firebase-analytics-ktx:22.0.1'
firebase-config = 'com.google.firebase:firebase-config-ktx:22.0.0'

# Database
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
encrypted-preferences = { module = "androidx.security:security-crypto-ktx", version.ref = "encrypted-prefs" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

# Testing

# Core
androidx-test = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-ktx = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# UI
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose-ui-test" }
ui-automator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "ui-automator" }

# Mockers
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# Dependencies of the included build-logic
android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "android-tools" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
gms = { id = "com.google.gms.google-services", version.ref = "google-services" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "firebase-appdistribution-gradle" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-crashlytics-gradle" }

#detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt-cli" }
#detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt-cli" }

# Plugins defined by this project
divinelink-android-application = { id = "divinelink.android.application", version = "unspecified" }
divinelink-android-application-compose = { id = "divinelink.android.application.compose", version = "unspecified" }
divinelink-android-library = { id = "divinelink.android.library", version = "unspecified" }
divinelink-android-library-compose = { id = "divinelink.android.library.compose", version = "unspecified" }
divinelink-android-feature = { id = "divinelink.android.feature", version = "unspecified" }
divinelink-android-hilt = { id = "divinelink.android.hilt", version = "unspecified" }
