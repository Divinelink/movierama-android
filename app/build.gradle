plugins {
    id 'kotlin-android'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.jlleitschuh.gradle.ktlint' version '11.0.0'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.devtools.ksp' version '1.7.20-1.0.8'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.firebase.appdistribution'
}

apply {
    from '../buildscripts/detekt.gradle'
    from '../buildscripts/git-hooks.gradle'
    from '../buildscripts/jacoco.gradle'
    from '../buildscripts/kover.gradle'
    from '../buildscripts/coveralls.gradle'
}


android {
    compileSdk 33
    defaultConfig {
        applicationId "com.andreolas.movierama"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 5
        versionName "2.2.1"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    signingConfigs {
        release {
            def tmpFilePath = System.getProperty("user.home") + "/work/_temp/keystore/"
            def allFilesFromDir = new File(tmpFilePath).listFiles()
            if (allFilesFromDir != null) {
                def keystoreFile = allFilesFromDir.first()
                keystoreFile.renameTo("/keystore/keystore.jks")
                storeFile = keystoreFile
            }
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseAppDistribution {
                artifactType="APK"
                artifactPath="app/build/outputs/apk/release/app-release.apk"
            }
        }
        debug {
            testCoverageEnabled true
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }

    android {
        compileOptions {
            coreLibraryDesugaringEnabled true

            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }

    testOptions {
        unitTests.all {
            kover {
                enabled = true
                excludes = [
                        "dagger.hilt.internal.aggregatedroot.codegen.*",
                        "hilt_aggregated_deps.*",
                        ".*ComposableSingletons.*",
                        ".*Hilt.*",
                        ".*BuildConfig.*",
                        ".*_Factory.*",
                ]
            }
        }
    }

    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            named(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
        variant.buildConfigField "String", "TMDB_BASE_URL", '"https://api.themoviedb.org/3"'
        variant.buildConfigField "String", "TMDB_IMAGE_URL", '"https://image.tmdb.org/t/p/original"'
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation project(':core-util')

    coreLibraryDesugaring libs.android.tools.desugar

    // Firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.config
    implementation libs.firebase.crashlytics
    implementation libs.firebase.analytics

    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.legacy.support
    implementation libs.androidx.recyclerview
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.startup
    implementation libs.androidx.core.ktx

    implementation libs.kotlin.stdlib.jdk7
    implementation libs.kotlin.test.junit
    implementation libs.kotlinx.datetime
    implementation libs.kotlinx.coroutines.core

    // Compose
    implementation libs.compose.material3
    implementation libs.compose.material
    implementation libs.compose.ui.util
    implementation libs.compose.ui.tooling
    implementation libs.compose.ui.preview
    implementation libs.compose.hilt.navigation
    debugImplementation libs.compose.ui.preview
    debugImplementation libs.compose.ui.test.manifest

    // Third Party
    implementation libs.timber
    implementation libs.lottie
    implementation libs.greenrobot.eventbus
    implementation libs.compose.destinations.core
    implementation libs.compose.destinations.animations
    ksp libs.compose.destinations.ksp

    // UI Tools
    implementation libs.material.material
    implementation libs.coil.compose
    implementation libs.vanpra.compose.dialogs

    // Network & Serialization
    implementation libs.ktor.client.core
    implementation libs.ktor.client.android
    implementation libs.ktor.client.logging
    implementation libs.ktor.client.core
    implementation libs.ktor.client.content.negotiation
    implementation libs.ktor.serialization.kotlinx.json
    implementation libs.kotlinx.serialization.json

    // DI
    kapt libs.dagger.hilt.compiler
    implementation libs.dagger.hilt.android
    kaptTest libs.dagger.hilt.compiler
    testImplementation libs.dagger.hilt.android.testing
    androidTestImplementation libs.dagger.hilt.android.testing
    kaptAndroidTest libs.dagger.hilt.compiler
    kaptAndroidTest libs.dagger.hilt.android.compiler

    // Database
    implementation libs.datastore
    implementation libs.datastore.core
    implementation libs.datastore.preferences
    implementation libs.datastore.preferences.core
    implementation libs.encrypted.preferences
    implementation libs.room.ktx
    implementation libs.room.runtime
    kapt libs.room.compiler
    // Testing Libs
    testImplementation testLibs.junit.junit
    testImplementation testLibs.mockito.core
    testImplementation testLibs.mockito.kotlin
    testImplementation testLibs.kotlix.coroutines.test
    testImplementation testLibs.mockk
    testImplementation testLibs.truth
    testImplementation testLibs.turbine
    testImplementation testLibs.androidx.test.core.ktx
    debugImplementation testLibs.androidx.test.core.ktx

    testImplementation libs.kotlin.test.junit

    androidTestImplementation testLibs.androidx.compose.ui
    androidTestImplementation testLibs.androidx.test.ext.junit
    androidTestImplementation testLibs.espresso.core
    androidTestImplementation testLibs.truth
}

repositories {
    google()
    mavenCentral()
    mavenLocal()
}
