/**
 * Having a version catalog for dependencies helps ensure that the project is well-maintained,
 * up-to-date, reproducible, and suitable for collaboration.*/
dependencyResolutionManagement {
  versionCatalogs {
    libs {
      version('kotlin', '1.9.20')
      version('kotlinx-datetime', '0.4.0')

      version('androidx-fragment', '1.5.4')
      version('androidx-lifecycle', '2.5.1')
      version('exoplayer', '2.18.3')

      // Network & Serialization
      version('kotlinx-serialization', '1.5.1')
      version('ktor', '2.3.3')

      // DI
      version('hilt', '2.49')

      // Compose
      version('compose', '1.3.3')
      version('compose-destinations', '1.7.27-beta')
      version('compose-bom', '2023.05.01')

      // Internal Database
      version('room', '2.6.0')
      version('datastore', '1.0.0')
      version('encrypted-prefs', '1.1.0-alpha04')

      // Multithreading
      version('kotlinx-coroutines', '1.7.3')

      // KSP
      version('ksp', '1.9.20-1.0.13')

      // Desugaring
      library('android-tools-desugar', 'com.android.tools:desugar_jdk_libs:1.1.5')

      // Kotlin
      library('kotlin-stdlib-jdk7', 'org.jetbrains.kotlin', 'kotlin-stdlib-jdk7').versionRef('kotlin')
      library('kotlin-stdlib-jdk8', 'org.jetbrains.kotlin', 'kotlin-stdlib-jdk8').versionRef('kotlin')
      library('kotlin-reflect', 'org.jetbrains.kotlin', 'kotlin-reflect').versionRef('kotlin')
      library('kotlin-test-junit', 'org.jetbrains.kotlin', 'kotlin-test-junit').versionRef('kotlin')
      library('kotlinx-datetime', 'org.jetbrains.kotlinx', 'kotlinx-datetime').versionRef('kotlinx-datetime')
      library('kotlinx-coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('kotlinx-coroutines')

      // Android X
      library('androidx-activity-ktx', 'androidx.activity:activity-ktx:1.5.1')
      library('androidx-core-ktx', 'androidx.core:core-ktx:1.9.0')
      library('androidx-fragment-ktx', 'androidx.fragment', 'fragment-ktx').versionRef('androidx-fragment')
      library('androidx-fragment-testing', 'androidx.fragment', 'fragment-testing').versionRef('androidx-fragment')
      library('androidx-annotation', 'androidx.annotation:annotation:1.4.0')
      library('androidx-appcompat', 'androidx.appcompat:appcompat:1.5.1')
      library('androidx-constraintlayout', 'androidx.constraintlayout:constraintlayout:2.1.4')
      library('androidx-recyclerview', 'androidx.recyclerview:recyclerview:1.2.1')
      library('androidx-legacy-support', 'androidx.legacy:legacy-support-v13:1.0.0')
      library('androidx-startup', 'androidx.startup:startup-runtime:1.1.1')

      // Firebase
      library('firebase-bom', 'com.google.firebase:firebase-bom:31.2.0')
      library('firebase-crashlytics', 'com.google.firebase:firebase-crashlytics-ktx:18.3.3')
      library('firebase-analytics', 'com.google.firebase:firebase-analytics-ktx:21.2.0')
      library('firebase-config', 'com.google.firebase:firebase-config-ktx:21.2.1')

      // Compose
      library('compose-bom', 'androidx.compose', 'compose-bom').versionRef('compose-bom')
      library('compose-material3', 'androidx.compose.material3:material3:1.1.0')
      library('compose-material', 'androidx.compose.material:material:1.4.3')
      library('compose-ui-util', 'androidx.compose.ui', 'ui-util').versionRef('compose')
      library('compose-ui-tooling', 'androidx.compose.ui', 'ui-tooling').versionRef('compose')
      library('compose-ui-preview', 'androidx.compose.ui', 'ui-tooling-preview').versionRef('compose')
      library('compose-ui-test-manifest', 'androidx.compose.ui', 'ui-test-manifest').versionRef('compose')
      library('compose-hilt-navigation', 'androidx.hilt:hilt-navigation-compose:1.0.0')
      // Compose Destinations
      library('compose-destinations-core', 'io.github.raamcosta.compose-destinations', 'core').versionRef('compose-destinations')
      library('compose-destinations-animations', 'io.github.raamcosta.compose-destinations', 'animations-core').versionRef('compose-destinations')
      library('compose-destinations-ksp', 'io.github.raamcosta.compose-destinations', 'ksp').versionRef('compose-destinations')

      // Third Party
      library('greenrobot-eventbus', 'org.greenrobot:eventbus:3.3.1')
      library('lottie', 'com.airbnb.android:lottie:5.2.0')
      library('timber', 'com.jakewharton.timber:timber:5.0.1')

      // UI Tools
      library('material-material', 'com.google.android.material:material:1.7.0')
      library('coil-compose', 'io.coil-kt:coil-compose:2.2.2')
      library('vanpra-compose-dialogs', 'io.github.vanpra.compose-material-dialogs:datetime:0.8.1-rc')

      // Video Players
      library('youtube-player', 'com.pierfrancescosoffritti.androidyoutubeplayer:core:11.1.0')
      library('exoplayer', 'com.google.android.exoplayer', 'exoplayer').versionRef('exoplayer')

      // Network & Serialization
      library('ktor-client-core', 'io.ktor', 'ktor-client-core').versionRef('ktor')
      library('ktor-client-android', 'io.ktor', 'ktor-client-android').versionRef('ktor')
      library('ktor-client-logging', 'io.ktor', 'ktor-client-logging').versionRef('ktor')
      library('ktor-client-content-negotiation', 'io.ktor', 'ktor-client-content-negotiation').versionRef('ktor')
      library('ktor-serialization-kotlinx-json', 'io.ktor', 'ktor-serialization-kotlinx-json').versionRef('ktor')
      library('kotlinx-serialization-json', 'org.jetbrains.kotlinx', 'kotlinx-serialization-json').versionRef('kotlinx-serialization')

      // DI
      library('dagger-hilt-compiler', 'com.google.dagger', 'hilt-compiler').versionRef('hilt')
      library('dagger-hilt-android', 'com.google.dagger', 'hilt-android').versionRef('hilt')
      library('dagger-hilt-android-testing', 'com.google.dagger', 'hilt-android-testing').versionRef('hilt')
      library('dagger-hilt-android-compiler', 'com.google.dagger', 'hilt-android-compiler').versionRef('hilt')

      // Database
      library('datastore', 'androidx.datastore', 'datastore').versionRef('datastore')
      library('datastore-core', 'androidx.datastore', 'datastore-core').versionRef('datastore')
      library('datastore-preferences', 'androidx.datastore', 'datastore-preferences').versionRef('datastore')
      library('datastore-preferences-core', 'androidx.datastore', 'datastore-preferences-core').versionRef('datastore')
      library('encrypted-preferences', 'androidx.security', 'security-crypto-ktx').versionRef('encrypted-prefs')
      library('room-ktx', 'androidx.room', 'room-ktx').versionRef('room')
      library('room-runtime', 'androidx.room', 'room-runtime').versionRef('room')
      library('room-compiler', 'androidx.room', 'room-compiler').versionRef('room')

      // plugins
      library('ksp', 'com.google.devtools.ksp', 'ksp').versionRef('ksp')
    }

    testLibs {
      version('androidx-test', '1.5.0')
      version('androidx-test-ext-junit', '1.1.3')
      version('junit', '4.13.2')
      version('kotlinx-coroutines', '1.6.4')
      version('truth', '1.1.3')
      version('turbine', '0.12.1')

      // UI
      version('espresso', '3.5.1')
      version('robolectric', '4.11')
      version('androidx-compose-ui-test', '1.3.3')
      version('ui-automator', '2.2.0')

      // Mockers
      version('mockito', '5.11.0')
      version('mockito-kotlin', '5.3.1')
      version('mockk', '1.13.1')

      library('junit-junit', 'junit', 'junit').versionRef('junit')
      library('androidx-test-core', 'androidx.test', 'core').versionRef('androidx-test')
      library('androidx-test-core-ktx', 'androidx.test', 'core-ktx').versionRef('androidx-test')
      library('androidx-test-ext-junit', 'androidx.test.ext', 'junit')
          .versionRef('androidx-test-ext-junit')
      library('androidx-test-ext-junit-ktx', 'androidx.test.ext', 'junit-ktx')
          .versionRef('androidx-test-ext-junit')
      library('androidx-test-orchestrator', 'androidx.test:orchestrator:1.4.1')
      library('kotlix-coroutines-test', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-test')
          .versionRef('kotlinx-coroutines')
      library('truth', 'com.google.truth', 'truth').versionRef('truth')
      library('turbine', 'app.cash.turbine', 'turbine').versionRef('turbine')

      // UI
      library('robolectric-robolectric', 'org.robolectric', 'robolectric').versionRef('robolectric')
      library('espresso-core', 'androidx.test.espresso', 'espresso-core').versionRef('espresso')
      library('androidx-compose-ui', 'androidx.compose.ui', 'ui-test-junit4')
          .versionRef("androidx-compose-ui-test")
      library('ui-automator', 'androidx.test.uiautomator', 'uiautomator').versionRef("ui-automator")

      // Mockers
      library('mockito-core', 'org.mockito', 'mockito-core').versionRef("mockito")
      library('mockito-kotlin', 'org.mockito.kotlin', 'mockito-kotlin').versionRef('mockito-kotlin')
      library('mockk', 'io.mockk', 'mockk').versionRef('mockk')
    }

    /*        lintLibs {
                version('lint', '30.2.2')
                library('lint-api', 'com.android.tools.lint', 'lint-api').versionRef('lint')
                library('lint-checks', 'com.android.tools.lint', 'lint-checks').versionRef('lint')
                library('lint-tests', 'com.android.tools.lint', 'lint-tests').versionRef('lint')
            }
            */
  }
}
